<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>VMC Project on VMC</title>
    <link>/</link>
    <description>Recent content in VMC Project on VMC</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Build Options</title>
      <link>/installation/examples/build-options/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/installation/examples/build-options/</guid>
      <description>Overview of the available options for building VMC examples and their default values:
VMC_WITH_Geant4 Build with Geant4 OFF VMC_WITH_Geant3 Build with Geant3 OFF VMC_WITH_MTRoot Build with MTRoot ON VMC_INSTALL_EXAMPLES Install examples libraries and programs ON  Geant4 VMC build options are automatically exported in Geant4VMCConfig.cmake. If Geant4 VMC was built with VGM, the VGM installation path has to be provided via -DVGM_DIR option.</description>
    </item>
    
    <item>
      <title>Build Options</title>
      <link>/installation/geant4_vmc/build-options/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/installation/geant4_vmc/build-options/</guid>
      <description>Geant4 VMC includes G4Root and MTRoot packages, which are independent from Geant4 VMC and can be build and used stand-alone. Use of G4Root, VGM, Geant4 G3toG4, UI and VIS packages in Geant4 VMC library is optional and can be switched on/off during CMake build.
Overview of available options and their default values:
Geant4VMC_BUILD_G4Root Build G4Root ON Geant4VMC_BUILD_MTRoot Build MTRoot ON Geant4VMC_BUILD_Geant4VMC Build Geant4VMC ON Geant4VMC_BUILD_EXAMPLES Build VMC examples ON Geant4VMC_USE_G4Root Build with G4Root ON Geant4VMC_USE_VGM Build with VGM OFF Geant4VMC_USE_GEANT4_UI Build with Geant4 UI drivers ON Geant4VMC_USE_GEANT4_VIS Build with Geant4 Vis drivers ON Geant4VMC_USE_GEANT4_G3TOG4 Build with Geant4 G3toG4 library OFF Geant4VMC_INSTALL_EXAMPLES Install examples ON  </description>
    </item>
    
    <item>
      <title>Building examples application programs - With 3.00.b01</title>
      <link>/installation/examples/examples-old/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/installation/examples/examples-old/</guid>
      <description>The following instructions apply only to 3.00.b01 (beta) version and are kept for reference purpose only. For the production version (3.0) see Installing and Running Examples page.  Since Geant4 VMC 3.0.x, there are also provided examples main programs which can be built with either shared or static libraries of all packages. Building with static libraries can make execution faster, especially when running in multi-threaded mode, than when running with dynamic loading of shared libraries in a &#34;</description>
    </item>
    
    <item>
      <title>Geometry Definition &amp; Navigation</title>
      <link>/user-guide/geant4_vmc/geometry-definition-navigation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/user-guide/geant4_vmc/geometry-definition-navigation/</guid>
      <description>Geometry definition The VMC supports two ways of geometry definition:
 via Root geometry package (TGeo) via TVirtualMC interface (historically the first way)  The first (newer) way is recommended for new users, the way via VMC is kept for a backward compatibility.
Since the version 2.0, user can choose between Geant4 native navigation and G4Root navigation, if geometry is define via TGeo. The choice of the navigation is done via the option specified with creating TG4RunConfiguration  object (see examples  for more details):</description>
    </item>
    
    <item>
      <title>Installing Geant3 - Older Versions</title>
      <link>/installation/geant3/geant3-old/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/installation/geant3/geant3-old/</guid>
      <description>The following instructions apply to the installation of the versions &amp;lt; 2.0.
 First get the Geant3 source from the Download page. No special configuration option for Root installation is needed with the actual version of Root.   With old Root v5.20/00, you have to specify your Fortran compiler:  --with-f77=g77  &amp;nbsp;  geant3 requires Pythia6 library. You can follow ROOT installation instructions or directly the Pythia site.  &amp;nbsp; To install geant3:</description>
    </item>
    
    <item>
      <title>Installing Geant4 VMC - Older Versions</title>
      <link>/installation/geant4_vmc/geant4_vmc-old/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/installation/geant4_vmc/geant4_vmc-old/</guid>
      <description>The following instructions apply to the installation of versions &amp;lt; 3.0. For the required configurations of Root and Geant4 for these older versions see Special installations  page.
  Getting source   First get the Geant4 VMC source from the Download page.  Root configuration  Since the version 2.9 there are no special configuration options for Root needed.  The path to Root installation can be defined in two complementary ways:</description>
    </item>
    
    <item>
      <title>Installing VMC</title>
      <link>/installation/vmc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/installation/vmc/</guid>
      <description>VMC requires ROOT.
VMC uses CMake to configure a build system for compiling and installing the headers, libraries and Cmake configuration files. To install VMC:
 First get the VMC source from the Download page. We will assume that the VMC package sits in a subdirectory /mypath/vmc
 Create build directory alongside our source directory
$ cd /mypath $ mkdir vmc_build $ ls vmc vmc_build  To configure the build, change into the build directory and run CMake:</description>
    </item>
    
    <item>
      <title>Magnetic Field</title>
      <link>/user-guide/geant4_vmc/magnetic-field/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/user-guide/geant4_vmc/magnetic-field/</guid>
      <description>The user magnetic field is in VMC defined via TVirtualMagField interface and then set to VMC using TVirtualMC::SetMagField(TVirtualMagField*) function. The propagation of tracks inside the magnetic field in Geant4 can be performed to a user-defined accuracy. See more details in the Electromagnetic Field section in the Geant4 User Guide for Application Developers. Note that while Geant4 allows magnetic, electric and electromagnetic fields, the VMC is currently limited to magnetic fields only.</description>
    </item>
    
    <item>
      <title>Mailing List</title>
      <link>/support/mailing-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/support/mailing-list/</guid>
      <description>The mailing list is used to keep you up to date about new developments in VMC packages, releases and bug fixes. This list is also used to discuss use of VMC with other users and with the developers. If you want to report a bug, please, use Bug Reports page. To join the root-vmc@cern.ch mailing list, do the following: If you don&#39;t have a CERN account, create a light weight CERN account.</description>
    </item>
    
    <item>
      <title>Publications List</title>
      <link>/publications/publications-list/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/publications/publications-list/</guid>
      <description>Please refer to the paper below when publishing results base on simulations with VMC:
Reference paper
Hřivnáčová I et al: The Virtual MonteCarlo,
ECONF C0303241:THJT006,2003; e-Print: cs.SE/0306005
 All publications listed in time reversed order:
 Geant4 VMC 3.0
, I Hřivnáčová, A Gheata 2015 J. Phys.: Conf. Ser. 664 072020 doi: 10.1088 /1742-6596/664/7/072020
 The Geant4 Virtual Monte Carlo I Hřivnáčová 2012 J. Phys.: Conf. Ser. 396 022024 doi:10.1088 /1742-6596/119/3/032025  Physics lists in Geant4 VMC</description>
    </item>
    
    <item>
      <title>Running examples</title>
      <link>/installation/examples/running-examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/installation/examples/running-examples/</guid>
      <description>First, make sure that you have included all libraries paths in your shared library path.
For all MCs:
/your_path/root/lib /your_path/mtroot_install/lib[64]  The MTRoot package is provided in Geant4 VMC and is installed by default with Geant4 VMC library and is located in geant4_vmc_install. It can be however installed also stand-alone and without Geant4 libraries.
For Geant3 only:
path to Pythia6 library /your_path/geant3_install/lib[64] /your_path/examples_install_g3/lib[64]  For Geant4 only:
/your_path/geant4_install/lib[64] /your_path/geant4_vmc_install/lib[64] /your_path/examples_install_g4/lib[64]  Running examples from Root session The example can be run by calling the provided macros from Root session:</description>
    </item>
    
    <item>
      <title>Tar Files</title>
      <link>/download/tar-files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/download/tar-files/</guid>
      <description>Pro versions    Package Version Tar file Tested with     vmc 0.1 (*) v0-1.tar.gz ROOT v6.18.00   geant3 2.7 v2-7.tar.gz ROOT 6.14.06   geant4_vmc 4.0.p1 v4-0-p1.tar.gz ROOT 6.14.06,
Geant4 10.05 (with embedded CLHEP 2.4.1.0), VGM 4.4, Garfield master at 07c0ec50a0d3086b3 (**)    (*) this is development version, the pro version is under construction
(**) with fixes in MR #1 in https://gitlab.</description>
    </item>
    
    <item>
      <title>VMC Concept</title>
      <link>/user-guide/vmc/vmc-concept/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/user-guide/vmc/vmc-concept/</guid>
      <description>The Virtual Monte Carlo (VMC) allows to run different simulation Monte Carlo without changing the user code and therefore the input and output format as well as the geometry and detector response definition.
The core of the VMC is the category of classes vmc. It provides a set of interfaces which completely decouple the dependencies between the user code and the concrete Monte Carlo, two of which have the key role:</description>
    </item>
    
    <item>
      <title>VMC Examples</title>
      <link>/examples/vmc-examples/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/examples/vmc-examples/</guid>
      <description>A set of examples of usage of VMC is included in geant4_vmc.
Though provided within Geant4 VMC, they can be built independently and do not require Geant4 installation in case you want to run them with GEANT3 only.
See more details on the VMC Examples web page.</description>
    </item>
    
    <item>
      <title>Bug Reports</title>
      <link>/support/bug-reports/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/support/bug-reports/</guid>
      <description>We use JIRA to track bugs and to gather feature requests.
 If you are new to using JIRA, you might want to read the ROOT Bug Tracker page first.
 Report a bug in VMC packages.
 The old problem reports can be found at this page.</description>
    </item>
    
    <item>
      <title>Experiment Frameworks</title>
      <link>/examples/experiment-frameworks/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/examples/experiment-frameworks/</guid>
      <description> VMC was developed by the ALICE Software Project and, since then it was adopted by other experiment frameworks.
ALICE  AliRoot - the ALICE software framework (for LHC Run 1 and 2) O2 - the new ALICE software framework in development (for LHC Run 3 and 4)  FAIR  FairRoot - A simulation, reconstruction and analysis framework, based on the ROOT system, for FAIR experiments  </description>
    </item>
    
    <item>
      <title>Installing Geant4 VMC - Special Installations</title>
      <link>/installation/geant4_vmc/special-installations/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/installation/geant4_vmc/special-installations/</guid>
      <description>Root Configuration for geant4_vmc versions (2.x - 2.8)  The older geant4_vmc versions (2.x - 2.8) require Root to be configured with g4root package; for this you have to specify the following configure options:
 &amp;ndash;enable-g4root &amp;ndash;with-g4-incdir=$G4INSTALL/include &amp;ndash;with-g4-libdir=$G4INSTALL/lib/Linux-g++ &amp;ndash;with-clhep-incdir=$CLHEP_BASE_DIR/include \ 

&amp;lt;li&amp;gt; &amp;lt;h3&amp;gt;Geant4 configuration (version &amp;gt;= 9.5) &amp;lt;br&amp;gt; with manual installation (with GNUmake) &amp;lt;/h3&amp;gt;  If you install Geant4 with the GNUmakefile build system and your own environment setting, you need to have set the following environment variables.</description>
    </item>
    
    <item>
      <title>Required and Optional Packages</title>
      <link>/installation/geant4_vmc/required-optional-packages/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/installation/geant4_vmc/required-optional-packages/</guid>
      <description>Geant4 VMC requires ROOT and Geant4 installed, and optionally, it can be built with VGM. See below tips for configuration and installation of these packages.
The path to required and optional packages installations can be defined in these complementary ways:
a) Via path to the CMake configuration file
Geant4_DIR ... path to Geant4Config.cmake ROOT_DIR ... path to ROOTConfig.cmake VGM_DIR ... path to VGMConfig.cmake  b) With their configuration script available in your PATH (Geant4 and Root):</description>
    </item>
    
    <item>
      <title>VMC</title>
      <link>/download/git-vmc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/download/git-vmc/</guid>
      <description>Development version (the whole repository):
git clone http://github.com/vmc-project/vmc.git  The pro version is under construction.
To switch to pro tagged version 1.0:
```bash cd vmc git checkout v1-0 ``` -- </description>
    </item>
    
    <item>
      <title>VMC Library</title>
      <link>/user-guide/vmc/vmc-library/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/user-guide/vmc/vmc-library/</guid>
      <description>The core of the VMC, VMC library, provides a set of interfaces which completely decouple the dependencies between the user code and the concrete Monte Carlo:
 TVirtualMC: Interface to the concrete Monte Carlo program TVirtualMCApplication: Interface to the user&amp;rsquo;s Monte Carlo application TVirtualMCStack: Interface to the particle stack TVirtualMCDecayer: Interface to the external decayer TVirtualMCSensitiveDetector: Interface to the user&amp;rsquo;s sensitive detector  The implementation of the TVirtualMC interface is provided for two Monte Carlo transport codes, GEANT3 and Geant4, with the VMC packages listed below.</description>
    </item>
    
    <item>
      <title>Geant3</title>
      <link>/download/git-geant3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/download/git-geant3/</guid>
      <description>Development version (the whole repository):
git clone http://github.com/vmc-project/geant3.git  To switch to pro tagged version 2.7:
cd geant3 git checkout v2-7  To switch to old tagged version 2.6:
(For older versions see the correspondent tag and the required version of ROOT in the table):
cd geant3 git checkout v2-6  </description>
    </item>
    
    <item>
      <title>Multiple VMC Engines</title>
      <link>/user-guide/vmc/multiple-vmc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/user-guide/vmc/multiple-vmc/</guid>
      <description>Overview The VMC package provides an abstract interface for Monte Carlo transport engines. Interfaces are implemented for * GEANT3 * GEANT4
each deriving from TVirtualMC implementing all necessary methods.
Before a user can instantiate an engine, an object deriving from TVirtualMCApplication needs to be present which has to be implemented by the user. It contains necessary hooks called from the TVirtualMCs depending on their internal state. At the same time it provides the bridge between the user code and VMC.</description>
    </item>
    
    <item>
      <title>Sensitive Detectors and Volumes</title>
      <link>/user-guide/geant4_vmc/sensitive-volumes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/user-guide/geant4_vmc/sensitive-volumes/</guid>
      <description>Sensitive Detectors Recently (since ROOT version v6.13.04) a new interface to user sensitive detector, TVirtualMCSensitiveDetector, has been added in the set of VMC interfaces. The support for this new way of definig sensitive detector is available since geant3 2.6 and geant4_vmc 4.0.
The user sensitive detectors object should be associated to the selected volumes in the new dedicated MCApplication function: void TVirtualMCApplication::SetSensitiveDetectors() 
using the new TVirtualMC function: void TVirtualMC::SetSensitiveDetector( const TString&amp;amp; volumeName, TVirtualMCSensitiveDetector* userSD);  Users can also choose whether scoring should be performed exclusively via sensitive detectors or via both sensitive detectors and MCApplication::Stepping() using the function void VirtualMC::SetExclusiveSDScoring(Bool_t);  If exclusive scoring is selected, the MCApplication::Stepping() is not called by MC.</description>
    </item>
    
    <item>
      <title>Geant4 VMC</title>
      <link>/download/git-geant4_vmc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/download/git-geant4_vmc/</guid>
      <description>Development version (the whole repository):
git clone http://github.com/vmc-project/geant4_vmc.git  To switch to tagged tagged version 4.0.p1:
git checkout v4-0-p1  To switch to old tagged version 3.6.p3 (compatible with Geant4 10.04.x):
cd geant4_vmc git checkout v3-6-p3  The list of new developments, bug fixes and the required versions of ROOT and Geant4 for each version can be found in the history file.
Download Geant4 - from the Geant4 Web site</description>
    </item>
    
    <item>
      <title>Physics Lists</title>
      <link>/user-guide/geant4_vmc/physics-lists/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/user-guide/geant4_vmc/physics-lists/</guid>
      <description>Physics list selection Physics Geant4 VMC does not provide a default physics list. User have to choose the physics list from the physics lists provided in Geant4 (see the Geant4 Physics List Guide or include their own physics list. The choice of the physics list is done via the option specified with creating TG4RunConfiguration  object. This option is passed asthe second argument in TG4RunConfiguration constructor (see examples for more details).</description>
    </item>
    
    <item>
      <title>Stacking of Particles</title>
      <link>/user-guide/geant4_vmc/stacking-of-particles/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/user-guide/geant4_vmc/stacking-of-particles/</guid>
      <description>The user VMC stack is used differently in Geant3 VMC and Geant4 VMC. Geant3 VMC pops both primary and secondary particles as they are provided by TVirtualMCStack::PopNextTrack(), while Geant4 VMC pops only primary particles using TVirtualMCStack::PopPrimaryForTracking() from the VMC stack.
Stacking of secondary particles is then handled by Geant4 kernel and the user VMC stack only monitors this stacking. By default, Geant4 VMC saves each secondary particle when it starts its tracking (at the the pre-track phase).</description>
    </item>
    
    <item>
      <title>Geant3 &#43; VMC Content</title>
      <link>/user-guide/geant3&#43;vmc/geant3&#43;vmc-content/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/user-guide/geant3&#43;vmc/geant3&#43;vmc-content/</guid>
      <description>Only the Geant3.21 code itself and the implementation of the TVirtualMC interface, TGeant3, provided in geant3 are maintained by the VMC project.
 Geant3.21 The updated version of Geant3.21 that includes several bug fixes compared to the standard version in CERNLIB. In this version all Geant3 gxxxxx routines have been renamed g3xxxxx.
The old Makefile system was replaced with a CMake based system since version 2.0.
See also Geant3.21 User Guide</description>
    </item>
    
    <item>
      <title>Special Cuts and Regions</title>
      <link>/user-guide/geant4_vmc/special-cuts-and-regions/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/user-guide/geant4_vmc/special-cuts-and-regions/</guid>
      <description>The way of applying cuts is different in Geant3 and Geant4. In Geant3, the cuts are defined as a limit in energy, which is applied both as an energy threshold (a secondary particle is not produced if its energy is beyond the threshold) and a tracking cut (a particle is stopped when its energy gets below the cut).
Inn Geant4, there is defined a unique cut in range which is then converted to an energy threshold per particle and material.</description>
    </item>
    
    <item>
      <title>User Geant4 Classes</title>
      <link>/user-guide/geant4_vmc/user-geant4-classes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/user-guide/geant4_vmc/user-geant4-classes/</guid>
      <description>The default Geant4 VMC behaviour, defined by the Geant4 user mandatory classes and user action classes implemented in Geant4 VMC, can be customized by a user by providing his own class derived from TG4RunConfiguration.
Such customization is recommended for including a user own physics list. User has also the possibility to override detector construction and/or primary generation action classes and use an existing Geant4 geometry/primary generator definition with VMC. In other cases, though the customisation is possible and allowed by the design, it has not been tested and so it is not recommended especially for the novice users.</description>
    </item>
    
    <item>
      <title>Meetings (Old)</title>
      <link>/publications/meetings/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/publications/meetings/</guid>
      <description> VMC meeting, CERN, 03 June 2009  &amp;nbsp; VMC meeting, CERN, 04 February 2009  &amp;nbsp; VMC Open issues meeting, CERN, 22 September 2008  &amp;nbsp; VMC Workshop, CERN, 29-30th November 2004   </description>
    </item>
    
    <item>
      <title>Visualization</title>
      <link>/user-guide/geant4_vmc/visualization/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/user-guide/geant4_vmc/visualization/</guid>
      <description>Geant4 visualization and UI drivers can be in Geant4 VMC enabled via dedicated CMake configuration options. See more details in Installing Geant4 VMC.
The G3-like functions for visualization defined in TVirtualMC are overcome with the interactive visualization capabilities of both Root and Geant4 geometry modellers, that&amp;rsquo;s why user is encouraged to use these modeller directly. User can set Geant4 visualization options using Geant4 visualization commands, as it is illustrated in the VMC examples  in g4vis.</description>
    </item>
    
    <item>
      <title>Switching User Interfaces</title>
      <link>/user-guide/geant4_vmc/switching-user-interfaces/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/user-guide/geant4_vmc/switching-user-interfaces/</guid>
      <description>The VMC interface provides a common denominator for all implemented MC&amp;rsquo;s and cannot cover all commands available in a Geant4 user session through Geant4 user interface (UI). Switching between the Root UI and the Geant4 UI gives a user the possibility of working with the native Geant4 UI. It is also possible to process a foreign command or a foreign macro in both UIs:
From Root to Geant4 UI Switching UI: root [0] ((TGeant4*)gMC)-&amp;gt;StartGeantUI();</description>
    </item>
    
    <item>
      <title>Multi-threaded Processing</title>
      <link>/user-guide/geant4_vmc/multi-threaded-processing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/user-guide/geant4_vmc/multi-threaded-processing/</guid>
      <description>Geant4 VMC with Multi-threading Geant4 Since version 3.00, Geant4 VMC supports running Geant4 in multi-threading (MT) mode. The VMC application will run automatically in MT mode when Geant4 VMC is built against Geant4 MT. This default behaviour can be changed via the option specified with creating TG4RunConfiguration  passed as the fifth argument in TG4RunConfiguration constructor. (Note that the fourth argument, specialStacking option, cannot be omitted in this case.)</description>
    </item>
    
    <item>
      <title>Vebosity</title>
      <link>/user-guide/geant4_vmc/verbosity/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/user-guide/geant4_vmc/verbosity/</guid>
      <description>For many Geant4 VMC classes (like for Geant4 classes) the user can select a higher verbosity level and activate various printings which can help in understanding or debugging his application.
 /mcVerbose/all level  Set the same verbose level (level &amp;gt;= 0) to all Geant4 VMC objects. If level = 0 no printing is issued, the higher the level is more printings will be issued.  /mcVerbose/geometryManager 2  Activate the debug printing from VGM geometry conversion (when geomRootToGeant4 option is selected)  /mcVerbose/regionsManager 1 [2] [3]  level=1: print the number of regions added via VMC level=2: print also the list of all volumes, the cuts in energy and calculated cuts in range level=3: print also all evaluated energy values  /mcVerbose/composedPhysicsList 2 [3] [4] Set the same verbose level to the registed user physics lists.</description>
    </item>
    
    <item>
      <title>Vebosity for Developers</title>
      <link>/user-guide/geant4_vmc/vebosity-for-developers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/user-guide/geant4_vmc/vebosity-for-developers/</guid>
      <description>For many Geant4 VMC classes (like for Geant4 classes) the user can select a higher verbosity level and activate various printings which can help in understanding or debugging his application. Here we list the commands useful rather for Geant4 VMC developers, for the commands useful for users see Verbosity.
 /mcVerbose/SDConstruction 2  Print the volumes IDs (implemented via G4VSensitiveDetector objects) and the maps between volumes and volume IDs.  /mcVerbose/runManager 3  Print the logical volume store.</description>
    </item>
    
    <item>
      <title>Source code documentation</title>
      <link>/user-guide/geant4_vmc/source-code-documentation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/user-guide/geant4_vmc/source-code-documentation/</guid>
      <description>Source code documentation  has been generated from the source code by Doxygen .</description>
    </item>
    
    <item>
      <title>Copyright</title>
      <link>/copyright/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/copyright/</guid>
      <description>Copyright &amp;copy; 2019 CERN and copyright holders of VMC Project. This software is distributed under the terms of the GNU General Public License v3 (GPL Version 3), copied verbatim in the file &amp;ldquo;LICENSE&amp;rdquo;.
Copyright holders Institutions:
 European Organization for Nuclear Research (CERN), Geneva, Switzerland Institut de Physique Nucléaire dʼOrsay (IPNO), Université Paris-Sud, CNRS-IN2P3, Orsay, France Ruprecht Karls Universitaet Heidelberg (DE)*  </description>
    </item>
    
    <item>
      <title>Credits</title>
      <link>/credits/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/credits/</guid>
      <description>The concept of Virtual MonteCarlo has been developed by the ALICE Software Project . Authors: R.Brun1, F.Carminati1, I.Hrivnacova2, A.Morsch1
The integration with TGeo, G4Root: A. Gheata1
The multiple VMC engines: B. Volkel1,3
1 European Organization for Nuclear Research (CERN), Geneva, Switzerland 2 Institut de Physique Nucléaire dʼOrsay (IPNO), Université Paris-Sud, CNRS-IN2P3, Orsay, France 3 Ruprecht Karls Universitaet Heidelberg (DE)</description>
    </item>
    
  </channel>
</rss>